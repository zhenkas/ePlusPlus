#pragma once
#include <windows.h>
#include <intrin.h>
#include <thread>

namespace EPP::Locks
{
	struct BackoffData;

	extern BackoffData g_backoffData;

	template<bool b = false>
	__declspec(noinline) uint32_t BackoffExp(uint32_t ctx)
	{
		if (g_backoffData.mult2 == 0)
			return 1;
		unsigned __int64 ticks = (unsigned __int64)__rdtsc();
		size_t ticksPtr = size_t(&ticks);
		uint32_t mult1 = ((ctx + ticksPtr) % g_backoffData.mult1) | 1;
		uint32_t randByte = g_backoffData.randBytes[BYTE(ctx + ticks)];
		volatile size_t i = randByte*mult1*g_backoffData.mult2;
		while (i-- != 0)
		{
			_mm_pause();
		}
		return (uint32_t)(ticks + ctx ^ i) | 1;
	}

	struct BackoffData
	{
		uint32_t numThreads = std::thread::hardware_concurrency();
		double effectiveness = numThreads < 2 ? 0 : 1.0 / ((1.0 / log2(numThreads)) + (1.0 / log2(numThreads) / numThreads));
		uint32_t mult1 = (uint32_t)(effectiveness * 35);
		uint32_t mult2 = (uint32_t)(effectiveness * 20);
		BYTE randBytes[256] =
		{
			11	,
			77	,
			32	,
			130	,
			126	,
			74	,
			233	,
			20	,
			246	,
			56	,
			72	,
			46	,
			224	,
			204	,
			166	,
			27	,
			90	,
			86	,
			30	,
			112	,
			245	,
			81	,
			149	,
			132	,
			63	,
			214	,
			21	,
			168	,
			247	,
			78	,
			235	,
			255	,
			73	,
			131	,
			100	,
			88	,
			241	,
			70	,
			229	,
			6	,
			106	,
			105	,
			89	,
			45	,
			75	,
			186	,
			210	,
			207	,
			198	,
			16	,
			183	,
			5	,
			101	,
			87	,
			242	,
			124	,
			223	,
			230	,
			252	,
			253	,
			13	,
			44	,
			150	,
			196	,
			180	,
			125	,
			76	,
			208	,
			188	,
			202	,
			240	,
			194	,
			4	,
			35	,
			99	,
			107	,
			57	,
			1	,
			17	,
			216	,
			9	,
			139	,
			227	,
			97	,
			135	,
			123	,
			236	,
			141	,
			169	,
			251	,
			226	,
			195	,
			197	,
			83	,
			38	,
			151	,
			174	,
			250	,
			179	,
			39	,
			102	,
			209	,
			117	,
			52	,
			120	,
			184	,
			249	,
			192	,
			228	,
			53	,
			220	,
			231	,
			41	,
			205	,
			48	,
			158	,
			113	,
			243	,
			182	,
			255	,
			217	,
			68	,
			185	,
			201	,
			143	,
			160	,
			62	,
			153	,
			142	,
			60	,
			212	,
			163	,
			170	,
			61	,
			54	,
			7	,
			59	,
			111	,
			254	,
			82	,
			234	,
			119	,
			148	,
			190	,
			103	,
			177	,
			215	,
			92	,
			108	,
			80	,
			156	,
			140	,
			37	,
			144	,
			114	,
			225	,
			29	,
			237	,
			31	,
			12	,
			154	,
			14	,
			10	,
			221	,
			133	,
			146	,
			187	,
			94	,
			219	,
			95	,
			110	,
			79	,
			145	,
			211	,
			238	,
			84	,
			248	,
			172	,
			128	,
			22	,
			64	,
			159	,
			178	,
			147	,
			181	,
			232	,
			43	,
			164	,
			200	,
			175	,
			71	,
			136	,
			189	,
			28	,
			193	,
			93	,
			244	,
			173	,
			206	,
			65	,
			58	,
			15	,
			116	,
			199	,
			152	,
			18	,
			8	,
			47	,
			134	,
			122	,
			137	,
			67	,
			129	,
			50	,
			55	,
			171	,
			3	,
			115	,
			69	,
			36	,
			2	,
			25	,
			161	,
			104	,
			121	,
			165	,
			118	,
			19	,
			203	,
			155	,
			26	,
			162	,
			239	,
			40	,
			85	,
			167	,
			213	,
			218	,
			176	,
			109	,
			24	,
			49	,
			127	,
			157	,
			42	,
			33	,
			98	,
			34	,
			66	,
			96	,
			222	,
			23	,
			191	,
			51	,
			91	,
			138	,
		};
	};


	__declspec(selectany) BackoffData g_backoffData;

}